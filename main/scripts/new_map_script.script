go.property("speed", 6)
go.property("tilesize", 128)

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("sound#sound_fade", "fade_in", {target_gain=1})
end

function final(self)
	djk.clear_nodes()
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)

	if action_id == hash("d") and action.pressed and not map_state.rooms_selected() and not map_state.schematic_selected() then
		map_state.select_doors(not map_state.doors_selected())
		msg.post(":/sound#440_660", "play_sound")
	elseif action_id == hash("r") and action.pressed and not map_state.doors_selected() and not map_state.schematic_selected() then

		map_state.select_rooms(not map_state.rooms_selected())
		msg.post(":/sound#440_660", "play_sound")
	elseif action_id == hash("c") and action.released and map_state.comms_enabled() then
		map_state.select_comms(not map_state.comms_selected())
		if map_state.comms_selected() then
			msg.post(":/script#script", "comms")
		end
	elseif action_id == hash("f") and action.pressed and map_state.files_enabled() then
		map_state.select_files(not map_state.files_selected())
		if map_state.files_selected() then
			monarch.show("file_menu", {}, {})
		end
	end

	if action_id == hash("text") then
		if map_state.rooms_selected() then
			local obj_id = map_state.display_id_to_room_proxy_id(action.text)

			if obj_id ~= nil then
				msg.post(obj_id, "room_menu")
				map_state.select_rooms(false)
			end
		elseif map_state.doors_selected() then
			local obj_id = map_state.display_id_to_door_proxy_id(action.text)

			if obj_id ~= nil then
				msg.post(obj_id, "toggle")
				map_state.select_doors(false)
			end
		end
	end


	-- Emulate the camera here
	local xvel = 0
	local yvel = 0

	local move = false

	if action_id == hash("up") then
		yvel = yvel - self.speed
		move = true
	end

	if action_id == hash("down") then
		yvel = yvel + self.speed
		move = true
	end

	if action_id == hash("left") then
		xvel = xvel + self.speed
		move = true
	end

	if action_id == hash("right") then
		xvel = xvel - self.speed
		move = true
	end

	if move then
		local pos = go.get_position()
		pos.y = pos.y + yvel
		pos.x = pos.x + xvel
		go.set_position(pos)
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
