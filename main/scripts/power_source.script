go.property("power_source_id", 0)
go.property("on", true)
go.property("tilemap", msg.url())
go.property("tile_power_offset", 20)
go.property("power_usage", 10)

function init(self)
	self.using_power = false
	self.layer = hash("power_"..self.power_source_id)
	local power_level = map_state.get_power_level()
	
	if self.on and not self.using_power and power_level >= self.power_usage then
		map_state.set_power_level(power_level - self.power_usage)
		print(self.power_source_id .. map_state.get_power_level())
		self.using_power = true
	else
		self.on = false
	end
	
	local _, _, w, h = tilemap.get_bounds(self.tilemap)
	self.tile_shows_power_on = true
	if not self.on then
		show_off_tile(self)
	end

	map_state.init_power_source(self.power_source_id, go.get_id())
end

function on_message(self, message_id, message, sender)
	if message_id == hash("power_source_menu") then
		msg.post(":/sound#660", "play_sound")
		monarch.show("power_source_menu", {}, {url = msg.url(), power_source_id = self.power_source_id})
	end

	if message_id == hash("on") then
		self.on = true
	elseif message_id == hash("off") then
		self.on = false
	end
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)

	local power_level = map_state.get_power_level()
	
	if self.on and not self.using_power and power_level >= self.power_usage then
		map_state.set_power_level(power_level - self.power_usage)
		self.using_power = true
	elseif not self.on and self.using_power then
		map_state.set_power_level(power_level + self.power_usage)
		self.using_power = false
	elseif self.on and not self.using_power and power_level < self.power_usage then
		self.on = false
	end

	if self.tile_shows_power_on ~= self.on then
		if self.on then
			show_on_tile(self)
		else
			show_off_tile(self)
		end

		self.tile_shows_power_on = self.on
	end

	if map_state.schematic_selected() then
		label.set_text("#label", string.upper(map_state.get_display_id(self.power_source_id)))
	else
		label.set_text("#label", "")
	end
end

function show_off_tile(self)
	local lx, ly, w, h = tilemap.get_bounds(self.tilemap)
	if self.tile_shows_power_on then
		self.tile_shows_power_on = false
		for y=ly, ly + h - 1, 1 do
			for x=lx, lx + w - 1, 1 do
				local tile = tilemap.get_tile(self.tilemap, self.layer, x, y)
				if tile > 100 then
					tilemap.set_tile(self.tilemap, self.layer, x, y, tile + 60)
				end
			end
		end
	end
end

function show_on_tile(self)
	local lx, ly, w, h = tilemap.get_bounds(self.tilemap)
	if not self.tile_shows_power_on then
		self.tile_shows_power_on = true
		for y=ly, ly + h - 1, 1 do
			for x=lx, lx + w - 1, 1 do
				local tile = tilemap.get_tile(self.tilemap, self.layer, x, y)
				if tile > 100 then
					tilemap.set_tile(self.tilemap, self.layer, x, y, tile - 60)
				end
			end
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
